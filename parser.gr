module Parser

from "result" include Result
from "list" include List as Stdlist

provide enum rec Data {
  Symbol(String),
  List(List<Data>),
}

let rec parsePart = (in: List<String>, out: List<Data>) =>
  match ((in, out)) {
    (["(", ...restIn], out) => {
      let (unparsed, parsed) = parsePart(restIn, [])
      parsePart(unparsed, Stdlist.append(out, [List(parsed)]))
    },
    ([")", ...restIn], out) => (restIn, out),
    ([nextIn, ...restIn], out) =>
      parsePart(restIn, Stdlist.append(out, [Symbol(nextIn)])),
    ([], out) => ([], out),
  }: (List<String>, List<Data>)

provide let parse = tokens => match (parsePart(tokens, [])) {
  ([], data) => Ok(data),
  ([_, ..._], _) => Err("Didn't consume all input tokens"),
  _ => Err("Unexpected error"),
}
